; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\odzhan\threefish\threefish.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_threefish_setkey
; Function compile flags: /Ogspy
;	COMDAT _threefish_setkey
_TEXT	SEGMENT
_c$ = 8							; size = 4
_key$ = 12						; size = 4
_tweak$ = 16						; size = 4
_threefish_setkey PROC					; COMDAT
; File c:\odzhan\threefish\threefish.c
; Line 46
	mov	eax, DWORD PTR _c$[esp-4]
; Line 47
	mov	edx, DWORD PTR _tweak$[esp-4]
	push	esi
	mov	esi, DWORD PTR _key$[esp]
	push	edi
	push	32					; 00000020H
	pop	ecx
	push	16					; 00000010H
	mov	edi, eax
	rep movsb
	pop	ecx
	lea	edi, DWORD PTR [eax+40]
	mov	esi, edx
	rep movsb
	mov	ecx, DWORD PTR _key$[esp+4]
	push	4
; Line 49
	mov	DWORD PTR [eax+32], -1443096030		; a9fc1a22H
	mov	DWORD PTR [eax+36], 466688986		; 1bd11bdaH
	pop	esi
$LL3@threefish_:
; Line 52
	mov	edi, DWORD PTR [ecx]
	xor	DWORD PTR [eax+32], edi
	mov	edi, DWORD PTR [ecx+4]
	xor	DWORD PTR [eax+36], edi
	add	ecx, 8
	dec	esi
	jne	SHORT $LL3@threefish_
; Line 54
	mov	esi, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx+8]
	xor	esi, DWORD PTR [edx+4]
	xor	ecx, DWORD PTR [edx]
	pop	edi
	mov	DWORD PTR [eax+60], esi
	mov	DWORD PTR [eax+56], ecx
	pop	esi
; Line 55
	ret	0
_threefish_setkey ENDP
_TEXT	ENDS
PUBLIC	_mix
; Function compile flags: /Ogspy
;	COMDAT _mix
_TEXT	SEGMENT
tv246 = -24						; size = 8
tv459 = -16						; size = 4
tv456 = -12						; size = 4
tv154 = -8						; size = 4
tv436 = -4						; size = 4
tv394 = 8						; size = 4
_data$ = 8						; size = 4
tv244 = 11						; size = 1
_rc$ = 12						; size = 4
_rnd$ = 16						; size = 4
_enc$ = 20						; size = 4
_mix	PROC						; COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 69
	mov	eax, DWORD PTR _data$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR _rnd$[ebp]
	and	edi, 7
	add	eax, 8
	add	edi, DWORD PTR _rc$[ebp]
	mov	DWORD PTR tv154[ebp], 2
	mov	DWORD PTR tv436[ebp], edi
$LL5@mix:
; Line 73
	cmp	DWORD PTR _enc$[ebp], 1
	mov	bl, BYTE PTR [edi]
	jne	SHORT $LN2@mix
; Line 75
	mov	esi, DWORD PTR [eax-8]
	mov	edi, DWORD PTR [eax-4]
	xor	DWORD PTR [eax], esi
	xor	DWORD PTR [eax+4], edi
; Line 76
	mov	edx, DWORD PTR [eax]
	mov	cl, 64					; 00000040H
	sub	cl, bl
	mov	ebx, DWORD PTR [eax+4]
	test	cl, 32					; 00000020H
	je	SHORT $LN14@mix
	mov	edx, ebx
	mov	ebx, DWORD PTR [eax]
$LN14@mix:
	and	cl, 31					; 0000001fH
	mov	BYTE PTR tv244[ebp], cl
	je	SHORT $LN9@mix
	mov	DWORD PTR tv459[ebp], edx
	mov	DWORD PTR tv456[ebp], edx
	shld	edx, ebx, cl
	mov	DWORD PTR tv246[ebp], edx
	mov	edx, DWORD PTR tv459[ebp]
	shld	ebx, edx, cl
	mov	edx, DWORD PTR tv246[ebp]
$LN9@mix:
; Line 77
	sub	esi, edx
	sbb	edi, ebx
	mov	DWORD PTR [eax-4], edi
; Line 78
	mov	edi, DWORD PTR tv436[ebp]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax-8], esi
	jmp	SHORT $LN4@mix
$LN2@mix:
; Line 79
	mov	ecx, DWORD PTR [eax]
	add	DWORD PTR [eax-8], ecx
	mov	edx, DWORD PTR [eax+4]
; Line 80
	mov	esi, ecx
	adc	DWORD PTR [eax-4], edx
	test	bl, 32					; 00000020H
	je	SHORT $LN10@mix
	mov	esi, edx
	mov	edx, ecx
$LN10@mix:
	mov	cl, bl
	and	cl, 31					; 0000001fH
	je	SHORT $LN11@mix
	mov	edi, esi
	shld	edi, edx, cl
	shld	edx, esi, cl
	mov	esi, edi
	mov	edi, DWORD PTR tv436[ebp]
$LN11@mix:
; Line 81
	mov	ecx, DWORD PTR [eax-8]
	mov	DWORD PTR [eax], esi
	xor	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR [eax+4], edx
	xor	DWORD PTR [eax+4], ecx
$LN4@mix:
; Line 69
	add	edi, 8
	add	eax, 16					; 00000010H
	dec	DWORD PTR tv154[ebp]
	mov	DWORD PTR tv436[ebp], edi
	jne	$LL5@mix
	pop	edi
	pop	esi
	pop	ebx
; Line 84
	leave
	ret	0
_mix	ENDP
_TEXT	ENDS
PUBLIC	_permute
; Function compile flags: /Ogspy
;	COMDAT _permute
_TEXT	SEGMENT
_data$ = 8						; size = 4
_permute PROC						; COMDAT
; Line 91
	mov	eax, DWORD PTR _data$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	push	esi
; Line 92
	mov	esi, DWORD PTR [eax+24]
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR [eax+28]
	mov	DWORD PTR [eax+12], esi
; Line 93
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], edx
	pop	esi
; Line 94
	ret	0
_permute ENDP
_TEXT	ENDS
PUBLIC	_addkey
; Function compile flags: /Ogspy
;	COMDAT _addkey
_TEXT	SEGMENT
_x1$ = -24						; size = 8
tv189 = -16						; size = 8
_x2$ = -8						; size = 8
_c$ = 8							; size = 4
_data$ = 12						; size = 4
_s$ = 16						; size = 1
_enc$ = 20						; size = 8
_addkey	PROC						; COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 107
	mov	eax, DWORD PTR _enc$[ebp]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _c$[ebp]
	push	edi
	xor	edi, edi
	neg	eax
	mov	DWORD PTR tv189[ebp], eax
	mov	eax, DWORD PTR _enc$[ebp+4]
	adc	eax, edi
	neg	eax
	mov	DWORD PTR tv189[ebp+4], eax
$LL6@addkey:
; Line 108
	mov	eax, DWORD PTR _data$[ebp]
	lea	ecx, DWORD PTR [eax+edi*8]
; Line 109
	movzx	eax, BYTE PTR _s$[ebp]
	add	eax, edi
	cdq
	push	5
	pop	ebx
	idiv	ebx
; Line 110
	and	DWORD PTR _x2$[ebp], 0
	and	DWORD PTR _x2$[ebp+4], 0
	mov	eax, DWORD PTR [esi+edx*8]
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR [esi+edx*8+4]
	mov	DWORD PTR _x1$[ebp+4], eax
; Line 112
	cmp	edi, 1
	jne	SHORT $LN3@addkey
	movzx	eax, BYTE PTR _s$[ebp]
	cdq
	push	3
	pop	ebx
	idiv	ebx
	mov	eax, DWORD PTR [esi+edx*8+40]
	mov	DWORD PTR _x2$[ebp], eax
	mov	eax, DWORD PTR [esi+edx*8+44]
	mov	DWORD PTR _x2$[ebp+4], eax
$LN3@addkey:
; Line 113
	cmp	edi, 2
	jne	SHORT $LN2@addkey
	movzx	eax, BYTE PTR _s$[ebp]
	inc	eax
	cdq
	push	3
	pop	ebx
	idiv	ebx
	mov	eax, DWORD PTR [esi+edx*8+40]
	mov	DWORD PTR _x2$[ebp], eax
	mov	eax, DWORD PTR [esi+edx*8+44]
	mov	DWORD PTR _x2$[ebp+4], eax
$LN2@addkey:
; Line 114
	cmp	edi, 3
	jne	SHORT $LN1@addkey
	movzx	eax, BYTE PTR _s$[ebp]
	cdq
	mov	DWORD PTR _x2$[ebp], eax
	mov	DWORD PTR _x2$[ebp+4], edx
$LN1@addkey:
; Line 117
	mov	eax, DWORD PTR tv189[ebp]
	xor	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR tv189[ebp+4]
	xor	edx, DWORD PTR [ecx+4]
	add	eax, DWORD PTR _x2$[ebp]
	adc	edx, DWORD PTR _x2$[ebp+4]
	add	eax, DWORD PTR _x1$[ebp]
	adc	edx, DWORD PTR _x1$[ebp+4]
	xor	eax, DWORD PTR tv189[ebp]
	xor	edx, DWORD PTR tv189[ebp+4]
	inc	edi
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
	cmp	edi, 4
	jl	$LL6@addkey
	pop	edi
	pop	esi
	pop	ebx
; Line 119
	leave
	ret	0
_addkey	ENDP
_TEXT	ENDS
PUBLIC	_threefish_encrypt
; Function compile flags: /Ogspy
;	COMDAT _threefish_encrypt
_TEXT	SEGMENT
_rc$ = -24						; size = 16
tv392 = -8						; size = 4
_s$ = -4						; size = 1
_c$ = 8							; size = 4
_data$ = 12						; size = 4
_enc$ = 16						; size = 4
_i$ = 19						; size = 1
_threefish_encrypt PROC					; COMDAT
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
; Line 133
	mov	edi, DWORD PTR _enc$[ebp]
	mov	BYTE PTR _s$[ebp], 0
	mov	bl, 1
	mov	DWORD PTR _rc$[ebp], 85406734		; 0517340eH
	mov	DWORD PTR _rc$[ebp+4], 540683801	; 203a2e19H
	mov	DWORD PTR _rc$[ebp+8], 623393040	; 25283910H
	mov	DWORD PTR _rc$[ebp+12], 538315809	; 20160c21H
	cmp	edi, 1
	jne	SHORT $LN7@threefish_@2
; Line 134
	push	2
	mov	BYTE PTR _s$[ebp], 18			; 00000012H
; Line 135
	or	bl, 255					; 000000ffH
	lea	eax, DWORD PTR _rc$[ebp+4]
	pop	edx
$LL9@threefish_@2:
; Line 140
	mov	ecx, DWORD PTR [eax-4]
; Line 143
	mov	esi, DWORD PTR [eax]
	bswap	esi
; Line 144
	bswap	ecx
	mov	DWORD PTR [eax-4], esi
	mov	DWORD PTR [eax], ecx
	add	eax, 8
	dec	edx
	jne	SHORT $LL9@threefish_@2
$LN7@threefish_@2:
; Line 148
	and	DWORD PTR tv392[ebp], 0
	mov	esi, DWORD PTR _data$[ebp]
	mov	BYTE PTR _i$[ebp], 0
$LL21@threefish_@2:
; Line 151
	test	BYTE PTR _i$[ebp], 3
	jne	SHORT $LN3@threefish_@2
; Line 152
	push	0
	push	edi
	push	DWORD PTR _s$[ebp]
	push	esi
	push	DWORD PTR _c$[ebp]
	call	_addkey
	add	esp, 20					; 00000014H
; Line 153
	add	BYTE PTR _s$[ebp], bl
$LN3@threefish_@2:
; Line 157
	cmp	edi, 1
	jne	SHORT $LN13@threefish_@2
; Line 158
	mov	edx, DWORD PTR [esi+24]
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], edx
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+12], edx
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], ecx
$LN13@threefish_@2:
; Line 162
	push	edi
	push	DWORD PTR tv392[ebp]
	lea	eax, DWORD PTR _rc$[ebp]
	push	eax
	push	esi
	call	_mix
	add	esp, 16					; 00000010H
; Line 165
	test	edi, edi
	jne	SHORT $LN5@threefish_@2
; Line 166
	mov	edx, DWORD PTR [esi+24]
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], edx
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+12], edx
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], ecx
$LN5@threefish_@2:
; Line 148
	inc	BYTE PTR _i$[ebp]
	inc	DWORD PTR tv392[ebp]
	cmp	BYTE PTR _i$[ebp], 72			; 00000048H
	jb	SHORT $LL21@threefish_@2
; Line 170
	push	0
	push	edi
	push	DWORD PTR _s$[ebp]
	push	esi
	push	DWORD PTR _c$[ebp]
	call	_addkey
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebx
; Line 171
	leave
	ret	0
_threefish_encrypt ENDP
_TEXT	ENDS
END
